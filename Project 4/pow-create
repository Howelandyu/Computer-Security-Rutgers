#!/usr/bin/python3
import hashlib
import time
import sys
def startBy(s):
	n = 0
	index = -1
	for i in range(len(s)):
		if s[i] == "0":
			n += 4
		else:
			index = i
			break
	if index > 0:
		if s[index] == "1":
			n += 3
		elif s[index] in "23":
			n += 2
		elif s[index] in "4567":
			n += 1
	return n


if __name__=="__main__":
	s = ""
	nbits = int(sys.argv[1])
	file = sys.argv[2]

	print(f"File: {file}")

	with open(file, "rb") as f:
		s = f.read()

	start_time = time.time()
	initialhash = hashlib.sha256(s).hexdigest()
	print(f"Initial-hash: {initialhash}")

	allLetters = "1234567890abcdefghijklmnopqstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	n = len(allLetters)
	find_prefix  = ""
	num0 = -1
	length = 1
	iters = 0

	while(True):
		find = False
		for i in range(n**length):
			iters += 1
			index = i
			prefix = ""
			while index != 0:
				prefix += allLetters[index % n]
				index //= n
			newHex = hashlib.sha256((prefix + initialhash).encode()).hexdigest()
			if startBy(newHex) >= nbits:
				find_prefix = prefix
				num0 = startBy(newHex)
				find = True
				break
		if find:
			break
		length += 1
		if length == 6:
			break

	print(f"Proof-of-work: {find_prefix}")
	print(f"Hash: {hashlib.sha256((find_prefix + initialhash).encode()).hexdigest()}")
	print(f"Leading-bits: {num0}")
	print(f"Iterations: {iters}")
	print(f"Compute-time: {time.time() - start_time}")
			

	